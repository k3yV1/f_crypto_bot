const { Scenes, Markup } = require('telegraf');
const fetch = require('node-fetch')

const buyCryptoLTCScene = new Scenes.WizardScene(
	'buyCryptoLTCTypeScene', // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å—Ü–µ–Ω—ã
	(ctx) => {
		ctx.reply('–ö–∞–∫–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?');
		return ctx.wizard.next(); // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É
	},
	(ctx) => {
		const cryptoAmount = parseFloat(ctx.message.text);
		if (isNaN(cryptoAmount) || cryptoAmount <= 0) {
			ctx.reply('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ');
			return;
		}

		ctx.wizard.state.cryptoAmount = cryptoAmount; // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏

		ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É:', Markup.inlineKeyboard([
			Markup.button.callback('USD', 'usd'),
			Markup.button.callback('UAH', 'uah'),
		]));

		return ctx.wizard.next(); // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É
	},
	async (ctx) => {
		if (ctx.callbackQuery.data === 'usd') {
			ctx.wizard.state.currency = ctx.callbackQuery.data; // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –≤–∞–ª—é—Ç—É –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
			let btcPrice = 0
			try {
				const response = await fetch('https://api.binance.com/api/v3/ticker/price', {
					method: 'GET',
					headers: {
						'X-MBX-APIKEY': process.env.BINANCE_API_KEY
					}
				})

				const data = await response.json()
				btcPrice = parseFloat(data.find(item => item.symbol === 'LTCUSDT').price).toFixed(2);
				console.log('btc: ', btcPrice)
			} catch (e) {
				console.log(e)
			}

			const cryptoAmount = ctx.wizard.state.cryptoAmount;
			const currency = ctx.wizard.state.currency;

			const price = (cryptoAmount * btcPrice)

			console.log('price: ', price)

			// –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏

			await ctx.replyWithMarkdown(`
‚ö†Ô∏è <b>–ü–†–û–ß–ò–¢–ê–ô–¢–ï –í–ù–ò–ú–ê–¢–ï–õ–¨–ù–û</b>

üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</b>: @${ctx.from.username}
üí≥ <b>–ü–æ–∫—É–ø–∫–∞</b>: LTC
üí∞ <b>–¶–µ–∑–∞ –∑–∞ ${cryptoAmount} LTC</b>: ${price} USD
üí± <b>–í–∞–ª—é—Ç–∞</b>: ${currency.toUpperCase()}`, { parse_mode: 'HTML'});

			await ctx.reply('–í —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞ –∏ —á–µ–ª–æ–≤–µ–∫ —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏ –ø–æ –≤–æ–ø—Ä–æ—Å—É –ø—Ä–æ–¥–∞–∂–∏');
			await ctx.telegram.sendMessage(378520189,`
üì© <b>–ó–∞—è–≤–∫–∞</b>			
			
üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</b>: @${ctx.from.username}
üí± <b>–¢–∏–ø –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã</b>: LTC
üí∞ <b>–ö–æ–ª-–≤–æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—Ç –∫—É–ø–∏—Ç—å</b>: ${cryptoAmount}
üí≥ <b>–°—Ç–æ–∏–º–æ—Å—Ç—å</b>: ${price} ${currency.toUpperCase()}
üóí <b>–¢–∏–ø –∑–∞—è–∫–∏</b>: –ü–æ–∫—É–ø–∫–∞
`)
			// return ctx.wizard.next()
			return ctx.scene.leave();
		}

		if(ctx.callbackQuery.data === 'uah') {
			ctx.wizard.state.currency = ctx.callbackQuery.data; // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –≤–∞–ª—é—Ç—É –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
			let btcPrice = 0
			try {
				const response = await fetch('https://api.binance.com/api/v3/ticker/price', {
					method: 'GET',
					headers: {
						'X-MBX-APIKEY': process.env.BINANCE_API_KEY
					}
				})

				const data = await response.json()
				btcPrice = parseFloat(data.find(item => item.symbol === 'LTCUAH').price).toFixed(2);
				console.log('btc: ', btcPrice)
			} catch (e) {
				console.log(e)
			}

			const cryptoAmount = ctx.wizard.state.cryptoAmount;
			const currency = ctx.wizard.state.currency;

			const price = (cryptoAmount * btcPrice)

			console.log('price: ', price)

			// –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏

			await ctx.replyWithMarkdown(`
‚ö†Ô∏è <b>–ü–†–û–ß–ò–¢–ê–ô–¢–ï –í–ù–ò–ú–ê–¢–ï–õ–¨–ù–û</b>

üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</b>: @${ctx.from.username}
üí≥ <b>–ü–æ–∫—É–ø–∫–∞</b>: LTC
üí∞ <b>–¶–µ–∑–∞ –∑–∞ ${cryptoAmount} BTC</b>: ${price} UAH
üí± <b>–í–∞–ª—é—Ç–∞</b>: ${currency.toUpperCase()}`, { parse_mode: 'HTML'});

			await ctx.reply('–í —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞ –∏ —á–µ–ª–æ–≤–µ–∫ —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏ –ø–æ –≤–æ–ø—Ä–æ—Å—É –ø—Ä–æ–¥–∞–∂–∏');
			await ctx.telegram.sendMessage(378520189,`
üì© <b>–ó–∞—è–≤–∫–∞</b>			
			
üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</b>: @${ctx.from.username}
üí± <b>–¢–∏–ø –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã</b>: LTC
üí∞ <b>–ö–æ–ª-–≤–æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—Ç –∫—É–ø–∏—Ç—å</b>: ${cryptoAmount}
üí≥ <b>–°—Ç–æ–∏–º–æ—Å—Ç—å</b>: ${price} ${currency.toUpperCase()}
üóí <b>–¢–∏–ø –∑–∞—è–∫–∏</b>: –ü–æ–∫—É–ø–∫–∞
`)
			return ctx.scene.leave();
		}

	}
);

module.exports = buyCryptoLTCScene;
