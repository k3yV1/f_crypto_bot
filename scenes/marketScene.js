const { Scenes, Markup } = require('telegraf')
const marketScene = new Scenes.BaseScene('marketTypeScene')

marketScene.enter((ctx) => {
	ctx.reply('–ó–¥–µ—Å—å –í—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –∏–ª–∏ –ø—Ä–æ–¥–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É —Å –ø–æ–º–æ—â—å—é –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–∞ –∫–∞—Ä—Ç—É', Markup.inlineKeyboard([
		Markup.button.callback('üìà –ö—É–ø–∏—Ç—å', 'buy'),
		Markup.button.callback('üìâ –ü—Ä–æ–¥–∞—Ç—å', 'sell'),
	])).catch(err => console.log(err))
})

marketScene.action('buy', async (ctx) => {
	await ctx.answerCbQuery()
	await ctx.reply('–í—ã–±–µ—Ä–µ—Ç–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É, –∫–æ—Ç–æ—Ä—É—é –∂–µ–ª–∞–µ—Ç–µ –∫—É–ø–∏—Ç—å:', Markup.inlineKeyboard([
		[Markup.button.callback('¬∑ BTC', 'buy_btc'), Markup.button.callback('¬∑ LTC', 'buy_ltc')],
		[Markup.button.callback('¬∑ ETH', 'buy_eth'), Markup.button.callback('¬∑ XRP', 'buy_xrp')],
		[Markup.button.callback('¬∑ USDT', 'buy_usdt')],
	]));
});

marketScene.action('sell', async (ctx) => {
	await ctx.answerCbQuery()
	await ctx.reply('–í—ã–±–µ—Ä–µ—Ç–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É, –∫–æ—Ç–æ—Ä—É—é –∂–µ–ª–∞–µ—Ç–µ –ø—Ä–æ–¥–∞—Ç—å:', Markup.inlineKeyboard([
		[Markup.button.callback('¬∑ BTC', 'sell_btc'), Markup.button.callback('¬∑ LTC', 'sell_ltc')],
		[Markup.button.callback('¬∑ ETH', 'sell_eth'), Markup.button.callback('¬∑ XRP', 'sell_xrp')],
		[Markup.button.callback('¬∑ USDT', 'sell_usdt')],
	]));
});

marketScene.action('buy_btc', async (ctx) => {
	await ctx.answerCbQuery()
	await ctx.scene.enter('buyCryptoBTCTypeScene')
})

marketScene.action('buy_ltc', async (ctx) => {
	await ctx.answerCbQuery()
 await ctx.scene.enter('buyCryptoLTCTypeScene')
})

marketScene.action('buy_eth', async (ctx) => {
	await ctx.answerCbQuery()
	await ctx.scene.enter('buyCryptoETHTypeScene')
})

marketScene.action('buy_xrp', async (ctx) => {
	await ctx.answerCbQuery()
	await ctx.scene.enter('buyCryptoXRPTypeScene')
})

marketScene.action('buy_usdt', async (ctx) => {
	await ctx.answerCbQuery()
	await ctx.scene.enter('buyCryptoUSDTTypeScene')
})

// –ü—Ä–æ–¥–∞–∂–∞

marketScene.action('sell_btc', async (ctx) => {
	await ctx.answerCbQuery()
	await ctx.scene.enter('sellCryptoBTCTypeScene')
})

marketScene.action('sell_ltc', async (ctx) => {
	await ctx.answerCbQuery()
	await ctx.scene.enter('sellCryptoLTCTypeScene')
})

marketScene.action('sell_eth', async (ctx) => {
	await ctx.answerCbQuery()
	await ctx.scene.enter('sellCryptoETHTypeScene')
})

marketScene.action('sell_xrp', async (ctx) => {
	await ctx.answerCbQuery()
	await ctx.scene.enter('sellCryptoXRPTypeScene')
})

marketScene.action('sell_usdt', async (ctx) => {
	await ctx.answerCbQuery()
	await ctx.scene.enter('sellCryptoUSDTTypeScene')
})

marketScene.leave((ctx) => {
	console.log('–ö–æ–Ω–µ—Ü —Å—Ü–µ–Ω—ã - marketScene')
})


module.exports = marketScene